A Guide to Javascript:

// = comment
Command K = clear console

- Primitive Types - Basic building blocks
    - Strings
    - Numbers
    - Boolean
    - Null
    - Undefined

- Numbers:

    - Positive Numbers
    - Negative Numbers
    - Whole Numbers (integers)
    - Decimal Numbers

NaN - Not a Number:

    - 0/0 = NaN
    - 1 + NaN = NaN

    - typeof 4 = number

- Math Operators:

    - * = Times (4 * 3)
    - / = Divide (4 / 2)
    - % = Leftover amount (19 % 4) = 3 - Good to work out if number is even or odd
    - + = Add
    - - = Subtract

    Order of operations:

    - (numbers in brackets come first)
    - * comes first if no brackets


- Incremental Operators:

       - Score = 10
       - Score += 5
       - Score = 15
       - Score *= 2
       - Score = 30

       - let numLives = 9
       - numLives = -= 8
       - or numLivess-- = 8
       - numLives++ = 9

       i++  vs ++i:

       - let i = 0
       - i++ = 0
       - i = 1

       let i = 5
       result = i++
       result = 5

       let i = 0
       ++i = 1
       i = 1

       let i = 5
       let result = ++i
       result = 6

- Variables - (Names for data/values):

    let = can change the value:

        - let someName = values
        - let year = 1985 (variable called year with a value of 1985)

        - let numHens = 5;
        - let numRoosters = 1

        numHens + numroosters = 6
        numHens + 1 = 6

        - let totalChickens = numHens + numRoosters
        total chickens = 6


    const = Constant number or value - You can not change unless it is a let or variable

        - Use const for things that don't change
        - const myName = Ben


- Booleans (True or False) (Yes or No):
        - let isGameOver = false
        - let isLoggedIn = true


- Naming conventions for let & const variables:

        - camelcase = currentDate = each new word has an uppercase letter
        - no spaces allowed
        - be specific when naming variables


- Strings (text):

        - must be wrapped in quotes 'text goes here' or "text goes here"
        - let favAnimal = 'Dog'
        - let favNum = '31' - a number in quotes is a string and not a number
        
- String Indexing:

        - C H I C K E N
        - 0 1 2 3 4 5 6

        - Each character has a corresponding number/index (a positional number)

        - let animal = 'Hippo'
        - animal[0] = H
        - animal[1] = i
        - animal[2] = p
        - animal[3] = p
        - animal[4] = 0
        - animal[12] = undefined

        animal.length = 5 = the length of the string

        let phone = '+447369881402' 
        phone[0] = +

- Concatination (adding two strings together):

        - 'lol' + 'lol' = 'lollol'
        - firstName + '' + lastName = the "" creates a space

        - 1 + 'hi' = '1hi' = makes both a string

- String Methods (built in actions):

        - Actions from the dot notation
        - thing.method()
        - let msg = 'Hello Ben'
        - msg.toUpperCase()
        - result = 'HELLO BEN'

        - let angryMsg = msg.toUpperCase()
        - angryMsg = 'HELLO BEN'
        - msg = 'Hello Ben'

        - .Trim = remove spaces
        - let userInput = '  Hello there Ben   '
        - userInput.trim() = 'Hello there Ben'     

        - let greeting = "    hi    "
        - greeting.trim().toUpperCase() = "HI"

- Arguments (Arguments go between the () ):
        
        - Arguments can be thought of as inputs that we pass into the parentheses.
    
    - .indexOf can be used to see if a string contains something

        - let tvShow = 'catdog';
        - tvShow.indexOf('cat') = 0 as cat is at the Start
        - tvShow.indexOf('dog') = 3 as dog is the 3rd index
        - tv.show.indexOf('z') = -1 as there is no z

    - .slice takes a part of the string by adding in the index number you wish to start at & if required end at:

        - let funMsg = "haha that is so funny"
        - funMsg.slice(5) = that is so funny
        - funMsg.slice(5, 9) = 'that'
        - the 5 & 9 are a starting and end index that says start at index 5 and end at index 9 which returns 'that'
        - funMsg.slice(-1) = y - this is the length of the string then minus 1 so the last string index is y

    - .replace - replaces a string with another string

        - let funMsg = "haha that is so funny"
        - funMsg.replace('haha', 'lolololol') = 'lolololol that is so funny'
         
         







